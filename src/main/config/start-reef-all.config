import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.SharedActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import com.sun.jini.config.ConfigUtil;

com.sun.jini.start {
  private static jiniHome = System.getProperty("jini.home");
  private static repositoryHome = System.getProperty("repository.home");
  private static separator = System.getProperty("path.separator");
  private static hostSuffix = "";

  private static policy = jiniHome + "/installverify/support/jsk-all.policy";

  private static systemHost = System.getProperty("system.host");
  private static systemPort = System.getProperty("system.port");

  private static serviceHost = System.getProperty("service.host");
  private static servicePort = System.getProperty("service.port");
  private static serviceDocroot = System.getProperty("service.docroot");

  private static reefHost = "localhost";
  private static reefPort = "8086";

  private static jskdl = " http://" + systemHost + ":" + systemPort + "/jsk-dl.jar";
  private static jiniRoot = jiniHome + "/lib/";

  private httpServerForSystem = new NonActivatableServiceDescriptor(
    "",
    policy,
    jiniRoot + "classserver.jar",
    "com.sun.jini.tool.ClassServer",
    new String[] {"-port", systemPort, "-dir", jiniHome + "/lib-dl", "-verbose"}
  );

  private httpServerForService = new NonActivatableServiceDescriptor(
    "",
    policy,
    jiniRoot + "classserver.jar", "com.sun.jini.tool.ClassServer",
    new String[] {"-port", servicePort, "-dir", serviceDocroot, "-verbose"}
  );

  private httpServerForReef = new NonActivatableServiceDescriptor(
    "",
    policy,
    jiniHome + "/lib/classserver.jar",
    "com.sun.jini.tool.ClassServer",
    new String[] {"-port", reefPort, "-dir", "lib-dl", "-verbose"}
  );

  static browser_classpath = ConfigUtil.concat(new Object[] {
    jiniRoot, "browser.jar", separator,
    repositoryHome, "/com/artima/serviceui/1.1a/serviceui-1.1a.jar"
  });

  private browser = new NonActivatableServiceDescriptor(
    "http://" + systemHost + ":" + systemPort + hostSuffix +"/browser-dl.jar" + jskdl,
    policy,
    browser_classpath,
    "com.sun.jini.example.browser.Browser",
    new String[] { "src/main/config/browser.config" }
  );

  static reef_classpath = ConfigUtil.concat(new Object[] {
//    jiniRoot, "reggie.jar", separator,
//    repositoryHome, "/com/artima/serviceui/1.1a/serviceui-1.1a.jar"
    jiniRoot, "jsk-lib.jar", separator,
    jiniRoot, "jsk-platform.jar", separator,
    jiniRoot, "sun-util.jar", separator,
    jiniRoot, "phoenix.jar", separator,
    jiniRoot, "phoenix-init.jar", separator,
    "reef.jar"
  });

//  private reef = new NonActivatableServiceDescriptor(       
  private reef = new SharedActivatableServiceDescriptor(
//    "http://" + systemHost + ":" + systemPort + hostSuffix + "/reggie-dl.jar" + jskdl,
//    policy,
//    jiniRoot + "reggie.jar", 
//    "com.sun.jini.reggie.TransientRegistrarImpl",
//    new String[] { "src/main/config/reggie.config" }
    "http://" + reefHost + ":" + reefPort + hostSuffix + "/reef-dl.jar" + jskdl, // exportCodebase 
    policy,
    reef_classpath, // importCodebase
    "org.wonderly.jini.reef.RegistrarImpl", // implClassName
    "log", // sharedGroupLog
    new String[] { "src/main/config/reef.config" }, // serverConfigArgs
    true // restart
  );


  private static groupPolicy = policy;
//"policy.all";
  private static groupClasspath = jiniRoot + "sharedvm.jar";
  private static groupPersistenceDirectory = "log/group.log";  

  private static codebase = ConfigUtil.concat(new Object[] {
      "http://", ConfigUtil.getHostName(), ":8085/reggie-dl.jar"});

//  private static policy = "policy/reggie.policy";
//  private static classpath = jiniRoot + "reggie.jar";
  static classpath = ConfigUtil.concat(new Object[] {
    jiniRoot, "reggie.jar", separator,
    repositoryHome, "/com/artima/serviceui/1.1a/serviceui-1.1a.jar"
  });

//  private static config = "config/activatable-reggie.config";
  
  private reef1 = new SharedActivationGroupDescriptor(
      groupPolicy, groupClasspath, groupPersistenceDirectory,
      null /* serverCommand */,
      null /* serverOptions */,
      null /* serverProperties */),

  private reef2 = new SharedActivatableServiceDescriptor(
      //codebase,
      "http://" + systemHost + ":" + systemPort + hostSuffix + "/reggie-dl.jar" + jskdl,
      policy, 
      classpath,
      "com.sun.jini.reggie.PersistentRegistrarImpl",
      groupPersistenceDirectory, 
//      new String[] { config }, 
      new String[] { "src/main/config/activatable-reggie.config" }
      true /* restart */);
  
  static serviceDescriptors = new ServiceDescriptor[] {
    httpServerForSystem,
    httpServerForService,
    httpServerForReef,
//    reef,
    reef1,
    reef2,
    browser
  };

}
