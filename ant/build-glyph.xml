<project name="glyph" default="init" basedir=".">

  <path id="glyph.classpath">
    <path refid="project.classpath"/>

    <pathelement location="${glyph.lib}"/>

    <fileset dir="${java.home}/../lib" includes="tools.jar"/>

    <pathelement location="${apt.ant.task.lib}"/>
  </path>

  <path id="glyphFactory">
    <pathelement location="${glyph.lib}"/>
  </path>

  <target name="init">
    <tstamp/>

    <echo message="----------- ${ant.project.name} ${version} [${year}] ------------"/>
  </target>

  <target name="generate" depends="init">
    <property name="scriptClassPath" refid="glyph.classpath"/>

    <mkdir dir="target/src-apt"/>

    <apt factorypathref="glyphFactory" destdir="${service.classes.dir}"
         factory="org.jini.glyph.GlyphFactory"
         srcdir="src/main/java"
         preprocessdir="target/src-apt" fork="true"
         classpathref="glyph.classpath">
      <option name="jiniRoot" value="${jini.home}/lib"/>
      <option name="scriptClasspath" value="${scriptClassPath}"/>
      <option name="dl_port" value="8082"/>
      <option name="dl_file" value="glyphtest-dl.jar"/>
      <option name="groupCodebase" value="http://localhost:8086/lib/group-dl.jar"/>
      <classpath refid="glyph.classpath"/>
      <include name="org/sf/jini/examples/glyph/*.java"/>
    </apt>
  </target>

  <target name="client.compile" depends="init">
    <javac destdir="${client.classes.dir}"
           debug="${debug}" optimize="${optimize}">
      <classpath refid="project.classpath"/>
      <src path="${src.dir}"/>

      <include name="org/sf/jini/examples/glyph/GlyphClient.java"/>
    </javac>
  </target>

  <target name="service.compile" depends="generate">
    <!--
        <javac destdir="${service.classes.dir}"
               debug="${debug}" optimize="${optimize}">
            <classpath refid="project.classpath" />
            <src path="${src.dir}" />

            <include name ="org/sf/jini/examples/common/JiniService.java"/>
            <include name ="org/sf/jini/examples/simpleserviceconf/RemoteFilter.java"/>
            <include name ="org/sf/jini/examples/simpleserviceconf/RemoteFilterImpl.java"/>
            <include name ="org/sf/jini/examples/simpleserviceconf/RemoteFilterProxy.java"/>
            <include name ="org/sf/jini/examples/simpleserviceconf/RemoteConfService.java"/>
        </javac>
    -->
  </target>

  <target name="compile" depends="client.compile, service.compile"/>

  <property name="service.archive.name" value="glyph-service.jar"/>
  <property name="service.dl.archive.name" value="glyph-service-dl.jar"/>
  <property name="client.archive.name" value="glyph-client.jar"/>

  <target name="jar" depends="compile">
    <createDepsJar classes="${service.classes.dir}" jarfile="${lib.for.services}/${service.archive.name}">
      <inlist>
        <in name="org.sf.jini.examples" />
      </inlist>
      <topclasslist>
        <topclass name="org.sf.jini.examples.glyph.GlyphRemoteFilterServiceImpl" />
        <topclass name="org.sf.jini.examples.glyph.GlyphRemoteFilterAdminImpl" />
        <topclass name="org.sf.jini.examples.glyph.constrainable.GlyphRemoteFilterCreator"/>
        <topclass name="org.sf.jini.examples.glyph.constrainable.GlyphRemoteFilterAdminCreator"/>
      </topclasslist>

<!--
      <filesets>
        <zipfileset src="${glyph.lib}" includes="org/jini/glyph/**/*.class"/>
      </filesets>
-->
      <classpathentries>
        <pathelement location="${glyph.lib}"/>
      </classpathentries>
    </createDepsJar>

    <createDepsJar classes="${service.classes.dir}" jarfile="${service.docroot}/${service.dl.archive.name}">
      <inlist>
        <in name="org.sf.jini.examples" />
      </inlist>
      <topclasslist>
        <topclass name="org.sf.jini.examples.glyph.GlyphRemoteFilterServiceImpl" />
        <topclass name="org.sf.jini.examples.glyph.GlyphRemoteFilterAdminImpl" />
        <topclass name="org.sf.jini.examples.glyph.constrainable.GlyphRemoteFilterCreator"/>
        <topclass name="org.sf.jini.examples.glyph.constrainable.GlyphRemoteFilterAdminCreator"/>

<!--
        <topclass name="org.sf.jini.examples.simpleservice.Filter" />
        <topclass name="org.sf.jini.examples.glyph.GlyphRemoteFilterServiceImpl"/>
        <topclass name="org.sf.jini.examples.glyph.constrainable.GlyphRemoteFilterCreator"/>
        <topclass name="org.sf.jini.examples.glyph.constrainable.GlyphRemoteFilterAdminCreator"/>
-->        
      </topclasslist>

<!--
      <filesets>
        <zipfileset src="${glyph.lib}" includes="org/jini/glyph/**/*.class"/>
        <zipfileset src="${glyph.lib}" includes="net/jini/admin/**/*.class"/>
      </filesets>
-->      
      
      <classpathentries>
        <pathelement location="${glyph.lib}"/>
      </classpathentries>
    </createDepsJar>

    <createDepsJar classes="${client.classes.dir}" jarfile="${client.docroot}/${client.archive.name}">
      <inlist>
        <in name="org.sf.jini.examples" />
      </inlist>
      <topclasslist>
        <topclass name="org.sf.jini.examples.glyph.GlyphClient" />
      </topclasslist>
    </createDepsJar>
  </target>

  <target name="client" depends="jar">
    <runJiniClient classname="org.sf.jini.examples.glyph.GlyphClient"
                   jarfile="${client.docroot}/${client.archive.name}"
                   policyfile="src/main/policy/all.policy"/>
  </target>

  <target name="services" depends="jar">
    <runServices policyfile="src/main/policy/all.policy"
                 configfile="src/main/config/start-glyph-all.config"/>
  </target>

</project>
